syntax = "proto3";

package user;

option go_package = "github.com/playboi9/golang-forum/internal/user/transport/grpc/gen";

service AuthService {
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc ValidateToken (TokenRequest) returns (TokenResponse);
    rpc GetUserInfoByID (GetUserInfoByIDRequest) returns (GetUserInfoByIDResponse);
}

message RegisterRequest {
    string email = 1;
    string username = 2;
    string password = 3;
    bool isAdmin = 4;
}
// message RegisterResponse {
//     bool success = 1;
//     string error = 2;
//     string email = 3;
//     string username = 4;
// }
message RegisterResponse {
    string token = 1;
    string error = 2;
    string email = 3;
    string username = 4;
    bool isAdmin = 5;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}
message LoginResponse {
    string token = 1;
    string error = 2;
    string email = 3;
    string username = 4;
    bool isAdmin = 5;
}

message TokenRequest {
    string token = 1;
}
message TokenResponse {
    bool valid = 1;
    int32 user_id = 2;
    bool isAdmin = 3;
}

message GetUserInfoByIDRequest {
    int32 userId = 1;
}
message GetUserInfoByIDResponse {
    string email = 1;
    string username = 2;
    bool isAdmin = 3;
}


service AdminService {
    rpc DeleteMessage(DeleteMessageRequest) returns (DeleteMessageResponse);
    rpc BanUser (BanRequest) returns (BanResponse);
    rpc UnbanUser (UnBanRequest) returns (UnBanResponse);
    rpc SetAdmin (SetAdminRequest) returns (SetAdminResponse);
    rpc IsBanned(IsBannedRequest) returns (IsBannedResponse);
    rpc GetUserList(GetUserListRequest) returns (GetUserListResponse);
}

message DeleteMessageRequest {
  int32 messageId = 1;
}
message DeleteMessageResponse {
  bool success = 1;
}

message BanRequest {
    string email = 1;
}
message BanResponse {
    bool success = 1;
    string error = 2;
}

message UnBanRequest {
    string email = 1;
}
message UnBanResponse {
    bool success = 1;
    string error = 2;
}

message SetAdminRequest {
    string email = 1;
    bool isAdmin = 2;
}
message SetAdminResponse {
    bool success = 1;
    string error = 2;
}

message IsBannedRequest {
  string email = 1;
}
message IsBannedResponse {
  bool banned = 1;
}

message GetUserListRequest {}
message GetUserListResponse {
    repeated UserInfo users = 1;
    int32 total = 2;
}
message UserInfo {
    int32 id = 1;
    string email = 2;
    string username = 3;
    bool isAdmin = 4;
}

